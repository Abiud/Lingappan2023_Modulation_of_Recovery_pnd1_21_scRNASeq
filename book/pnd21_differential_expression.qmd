# PND 21 Differential Expression Analysis - Male HOvsRA & Female HOvsRA

```{r setup}
set.seed(42)
age <- "pnd21"
samples <- c("OxygenF_21", "RoomAirF_21", "OxygenM_21", "RoomAirM_21")
projectDir <- getwd()
integratedDir <- file.path(projectDir, "data", age, "integrated.RData")
load(integratedDir)

source("R/helpers.R")
source("R/plots.R")
source("R/differential_expression.R")
source("R/get_enrichment_summary.R")
```

```{r loadLibraries}
#| message: FALSE
.packages <- c(
    "Seurat", "dplyr", "htmlwidgets", "ggplot2", "patchwork",
    "DT", "downloadthis", "crosstalk", "purrr", "knitr",
    "ComplexHeatmap", "SeuratObject", "SeuratWrappers",
    "circlize", "pheatmap", "sctransform", "stringr", "magrittr", "future",
    "RcppAnnoy", "enrichR"
)

# require packages
loaded_packages <- lapply(.packages, require, character.only = TRUE)
```

```{r initialize_datatable}
#| include: FALSE
htmltools::tagList(DT::datatable(cars))
```

## Subset Endothelial
```{r subsetEndothelial}
#| message: FALSE
endoSubsetDir <- file.path(projectDir, "data", age, "endoSubset.RData")
if (file.exists(endoSubsetDir)) {
    load(endoSubsetDir)
} else {
    endoSubset <- GetCellTypeSubset(integrated, cellTypeName = "endothelial")
    save(endoSubset, file = endoSubsetDir)
}
```

### Endothelial Figures

:::: {.panel-tabset group="endoPlots"}

```{r endoFigures}
#| echo: FALSE
#| message: FALSE
#| output: asis
#| fig-width: 12
#| fig-height: 8
plots <- GetSubsetPlots(endoSubset)
cat("## Dimplot\n\n")
plots$dimPlots[["umap"]]
cat("\n\n")
cat("## Dimplot by Sample\n\n")
plots$dimPlots[["splitBySample"]]
cat("\n\n")
cat("## Dimplot by Experiment\n\n")
plots$dimPlots[["splitByExperiment"]]
cat("\n\n")
cat("## Dimplot by Sex\n\n")
plots$dimPlots[["groupBySex"]]
cat("\n\n")
cat("## Proportion Plots\n\n")
plots$proportionPlots[["byExperiment"]] / plots$proportionPlots[["bySample"]]
cat("\n\n")
```

::::

### Get Endothelial Male vs Female DE Genes
```{r getEndothelialMarkers}
#| message: FALSE
endoMarkersDir <- file.path(projectDir, "results", age, "endoMarkers.RData")
if (file.exists(endoMarkersDir)) {
    load(endoMarkersDir)
} else {
    endoMarkers <- GetMarkers(endoSubset, "endothelial", split = "sex")
    GetEnrichmentSummarySingleCondition(lapply(endoMarkers, function(x) x$Male), "endothelial", age, appendToFileName = "_Male", condition = "byExperimentSex")
    GetEnrichmentSummarySingleCondition(lapply(endoMarkers, function(x) x$Female), "endothelial", age, appendToFileName = "_Female", condition = "byExperimentSex")
    save(endoMarkers, file = endoMarkersDir)
}
```

:::: {.panel-tabset group="endoMarkersFemale"}

#### Female

```{r endoMarkersFemale}
#| echo: FALSE
#| output: asis
#| message: FALSE
for (i in names(endoMarkers)) {
    cat("## ", i, "\n\n")
    if (is.null(endoMarkers[[i]]$Female)) {
        cat("No DE genes found")
    } else {
        print(htmltools::tagList(
            DT::datatable(endoMarkers[[i]]$Female |> dplyr::filter(sig_exp %in% c("UP", "DOWN")) |> dplyr::arrange(desc(avg_log2FC)),
            extensions = "Buttons",
            options = list(
                dom = "Blfrtip",
                buttons = c("copy", "csv", "excel", "pdf", "print"),
                lengthMenu = list(
                    c(10, 25, 50, -1),
                    c(10, 25, 50, "All")
                ),
                scrollX = TRUE
            )
        )))
    }
    cat("\n\n")
}
```

::::

#### Male

:::: {.panel-tabset group="endoMarkersMale"}

```{r endoMarkersMale}
#| echo: FALSE
#| output: asis
#| message: FALSE
for (i in names(endoMarkers)) {
    cat("## ", i, "\n\n")
    if (is.null(endoMarkers[[i]]$Male)) {
        cat("No DE genes found")
    } else {
        print(htmltools::tagList(
            DT::datatable(endoMarkers[[i]]$Male |> dplyr::filter(sig_exp %in% c("UP", "DOWN")) |> dplyr::arrange(desc(avg_log2FC)),
            extensions = "Buttons",
            options = list(
                dom = "Blfrtip",
                buttons = c("copy", "csv", "excel", "pdf", "print"),
                lengthMenu = list(
                    c(10, 25, 50, -1),
                    c(10, 25, 50, "All")
                ),
                scrollX = TRUE
            )
        )))
    }
    cat("\n\n")
}
```

::::

:::: {.panel-tabset group="endoMarkersFigures"}
```{r endoMarkersFigures}
#| echo: FALSE
#| message: FALSE
#| output: asis
#| fig-width: 12
#| fig-height: 8
for (i in names(endoMarkers)) {
    cat("## ", i, "\n\n")
    GenerateHeatmaps(endoSubset, i, endoMarkers[[i]], compareBy = "experimentSex", experiment = "byExperimentSex")
    cat("\n\n")
}
```
::::

## Subset Immune
```{r subsetImmune}
#| message: FALSE
immuneSubsetDir <- file.path(projectDir, "data", age, "immuneSubset.RData")
if (file.exists(immuneSubsetDir)) {
    load(immuneSubsetDir)
} else {
    immuneSubset <- GetCellTypeSubset(integrated, cellTypeName = "immune")
    save(immuneSubset, file = immuneSubsetDir)
}
```

### Immune Figures

:::: {.panel-tabset group="immunePlots"}

```{r immuneFigures}
#| echo: FALSE
#| message: FALSE
#| output: asis
#| fig-width: 12
#| fig-height: 8
plots <- GetSubsetPlots(immuneSubset)
cat("## Dimplot\n\n")
plots$dimPlots[["umap"]]
cat("\n\n")
cat("## Dimplot by Sample\n\n")
plots$dimPlots[["splitBySample"]]
cat("\n\n")
cat("## Dimplot by Experiment\n\n")
plots$dimPlots[["splitByExperiment"]]
cat("\n\n")
cat("## Dimplot by Sex\n\n")
plots$dimPlots[["groupBySex"]]
cat("\n\n")
cat("## Proportion Plots\n\n")
plots$proportionPlots[["byExperiment"]] / plots$proportionPlots[["bySample"]]
cat("\n\n")
```

::::

### Get Immune Male vs Female DE Genes
```{r getImmuneMarkers}
#| message: FALSE
immuneMarkersDir <- file.path(projectDir, "results", age, "immuneMarkers.RData")
if (file.exists(immuneMarkersDir)) {
    load(immuneMarkersDir)
} else {
    immuneMarkers <- GetMarkers(immuneSubset, "immune", split = "sex")
    GetEnrichmentSummarySingleCondition(lapply(immuneMarkers, function(x) x$Male), "immune", age, appendToFileName = "_Male", condition = "byExperimentSex")
    GetEnrichmentSummarySingleCondition(lapply(immuneMarkers, function(x) x$Female), "immune", age, appendToFileName = "_Female", condition = "byExperimentSex")
    save(immuneMarkers, file = immuneMarkersDir)
}
```

#### Female

:::: {.panel-tabset group="immuneMarkersFemale"}

```{r immuneMarkersFemale}
#| echo: FALSE
#| output: asis
#| message: FALSE
for (i in names(immuneMarkers)) {
    cat("## ", i, "\n\n")
    if (is.null(immuneMarkers[[i]]$Female)) {
        cat("No DE genes found")
    } else {
        print(htmltools::tagList(
            DT::datatable(immuneMarkers[[i]]$Female |> dplyr::filter(sig_exp %in% c("UP", "DOWN")) |> dplyr::arrange(desc(avg_log2FC)),
            extensions = "Buttons",
            options = list(
                dom = "Blfrtip",
                buttons = c("copy", "csv", "excel", "pdf", "print"),
                lengthMenu = list(
                    c(10, 25, 50, -1),
                    c(10, 25, 50, "All")
                ),
                scrollX = TRUE
            )
        )))
    }
    cat("\n\n")
}
```

::::

#### Male

:::: {.panel-tabset group="immuneMarkersMale"}

```{r immuneMarkersMale}
#| echo: FALSE
#| output: asis
#| message: FALSE
for (i in names(immuneMarkers)) {
    cat("## ", i, "\n\n")
    if (is.null(immuneMarkers[[i]]$Male)) {
        cat("No DE genes found")
    } else {
        print(htmltools::tagList(
            DT::datatable(immuneMarkers[[i]]$Male |> dplyr::filter(sig_exp %in% c("UP", "DOWN")) |> dplyr::arrange(desc(avg_log2FC)),
            extensions = "Buttons",
            options = list(
                dom = "Blfrtip",
                buttons = c("copy", "csv", "excel", "pdf", "print"),
                lengthMenu = list(
                    c(10, 25, 50, -1),
                    c(10, 25, 50, "All")
                ),
                scrollX = TRUE
            )
        )))
    }
    cat("\n\n")
}
```

::::

:::: {.panel-tabset group="immuneMarkersFigures"}
```{r immuneMarkersFigures}
#| echo: FALSE
#| message: FALSE
#| output: asis
#| fig-width: 12
#| fig-height: 8
for (i in names(immuneMarkers)) {
    cat("## ", i, "\n\n")
    GenerateHeatmaps(immuneSubset, i, immuneMarkers[[i]], compareBy = "experimentSex", experiment = "byExperimentSex")
    cat("\n\n")
}
```
::::

